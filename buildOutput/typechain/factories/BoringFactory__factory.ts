/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BoringFactory, BoringFactoryInterface } from "../BoringFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "masterContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: true,
        internalType: "address",
        name: "cloneAddress",
        type: "address",
      },
    ],
    name: "LogDeploy",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "masterContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "useCreate2",
        type: "bool",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "cloneAddress",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "masterContractOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610497806100206000396000f3fe6080604052600436106100295760003560e01c80631f54245b1461002e578063bafe4f14146100e6575b600080fd5b6100bd6004803603606081101561004457600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516919081019060408101602082013564010000000081111561007c57600080fd5b82018360208201111561008e57600080fd5b803590602001918460018302840111640100000000831117156100b057600080fd5b9193509150351515610126565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156100f257600080fd5b506100bd6004803603602081101561010957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610439565b600073ffffffffffffffffffffffffffffffffffffffff85166101aa57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f426f72696e67466163746f72793a204e6f206d6173746572436f6e7472616374604482015290519081900360640190fd5b606085901b8215610238576000858560405180838380828437604051920182900382207f3d602d80600a3d3981f3363d3d373d3d3d363d730000000000000000000000008352601483018890527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288401529550909350849250603791508390506000f593505050610294565b6040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f09250505b73ffffffffffffffffffffffffffffffffffffffff8281166000818152602081815260409182902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016948b1694909417909355517f4ddf47d400000000000000000000000000000000000000000000000000000000815260048101928352602481018790529091634ddf47d491349189918991908190604401848480828437600081840152601f19601f82011690508083019250505093505050506000604051808303818588803b15801561036b57600080fd5b505af115801561037f573d6000803e3d6000fd5b50505050508173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fd62166f3c2149208e51788b1401cc356bf5da1fc6c7886a32e18570f57d88b3b878760405180806020018281038252848482818152602001925080828437600083820152604051601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169092018290039550909350505050a350949350505050565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff168156fea2646970667358221220d0c0b2ef3a6010c6594eeb02a7038440bb67c0850b59c97b9a38819d9468578d64736f6c634300060c0033";

type BoringFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoringFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BoringFactory__factory extends ContractFactory {
  constructor(...args: BoringFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BoringFactory";
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BoringFactory> {
    return super.deploy(overrides || {}) as Promise<BoringFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BoringFactory {
    return super.attach(address) as BoringFactory;
  }
  override connect(signer: Signer): BoringFactory__factory {
    return super.connect(signer) as BoringFactory__factory;
  }
  static readonly contractName: "BoringFactory";

  public readonly contractName: "BoringFactory";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoringFactoryInterface {
    return new utils.Interface(_abi) as BoringFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BoringFactory {
    return new Contract(address, _abi, signerOrProvider) as BoringFactory;
  }
}
