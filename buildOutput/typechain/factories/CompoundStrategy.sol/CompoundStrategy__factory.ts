/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundStrategy,
  CompoundStrategyInterface,
} from "../../CompoundStrategy.sol/CompoundStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bentobox_",
        type: "address",
      },
      {
        internalType: "contract IFactory",
        name: "factory_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "contract IcToken",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "compToken_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "weth_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "afterExit",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bentobox",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cToken",
    outputs: [
      {
        internalType: "contract IcToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "exit",
    outputs: [
      {
        internalType: "int256",
        name: "amountAdded",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exited",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "harvest",
    outputs: [
      {
        internalType: "int256",
        name: "amountAdded",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
    ],
    name: "harvestCOMP",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "actualAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61014060405234801561001157600080fd5b506040516121d03803806121d0833981810160405260c081101561003457600080fd5b50805160208201516040808401516060850151608086015160a090960151600080546001600160a01b0319163390811782559451969795969395929492939192917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160601b0319606087811b821660805286811b82166101205285811b821660a05284811b821660c05283811b821660e05282901b16610100526040805163095ea7b360e01b81526001600160a01b038581166004830152600019602483015291519186169163095ea7b3916044808201926020929091908290030181600087803b15801561012a57600080fd5b505af115801561013e573d6000803e3d6000fd5b505050506040513d602081101561015457600080fd5b505050505050505060805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205160601c611f9261023e600039806115a8528061179c5250806103ca52806103f65280610cc05250806103a95280610ddf52508061076252806108075280610ad65280610ef05280610fd452806110e952806111b3528061129a52806113a252508061041752806108ee52806109945280610bf15280610c7252806111e3528061143a52806114e5528061177552508061061f52806109b652806109f25280610c945280610e0c5280611003528061150752806115845250611f926000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80636939aaf5116100b2578063b649d03211610081578063d9253c2d11610066578063d9253c2d1461027a578063e30c397814610335578063fc0c546a1461033d5761011b565b8063b649d0321461026a578063c45a0155146102725761011b565b80636939aaf51461022057806369e527da1461023d5780637f8661a1146102455780638da5cb5b146102625761011b565b80633fc8cef3116100ee5780633fc8cef3146101d05780634e71e0c8146101f45780635ce6c327146101fc5780636605dfa7146102185761011b565b8063022444e614610120578063078dfbe71461013f57806318fccc76146101755780632e1a7d4d146101b3575b600080fd5b61013d6004803603602081101561013657600080fd5b5035610345565b005b61013d6004803603606081101561015557600080fd5b506001600160a01b03813516906020810135151590604001351515610492565b6101a16004803603604081101561018b57600080fd5b50803590602001356001600160a01b0316610612565b60408051918252519081900360200190f35b6101a1600480360360208110156101c957600080fd5b50356109e5565b6101d8610cbe565b604080516001600160a01b039092168252519081900360200190f35b61013d610ce2565b610204610dbc565b604080519115158252519081900360200190f35b6101d8610ddd565b61013d6004803603602081101561023657600080fd5b5035610e01565b6101d8610fd2565b6101a16004803603602081101561025b57600080fd5b5035610ff6565b6101d8611573565b6101d8611582565b6101d86115a6565b6102046004803603606081101561029057600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156102c057600080fd5b8201836020820111156102d257600080fd5b803590602001918460018302840111640100000000831117156102f457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506115ca945050505050565b6101d8611764565b6101d8611773565b6000546001600160a01b031633146103a4576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6103ef7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000030611797565b508061043c7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000030611797565b101561048f576040805162461bcd60e51b815260206004820152601c60248201527f436f6d706f756e6453747261746567793a206e6f7420656e6f75676800000000604482015290519081900360640190fd5b50565b6000546001600160a01b031633146104f1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b81156105d9576001600160a01b03831615158061050b5750805b61055c576040805162461bcd60e51b815260206004820152601560248201527f4f776e61626c653a207a65726f20616464726573730000000000000000000000604482015290519081900360640190fd5b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560018054909116905561060d565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0385161790555b505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610691576040805162461bcd60e51b815260206004820152601c60248201527f436f6d706f756e6453747261746567793a206f6e6c792062656e746f00000000604482015290519081900360640190fd5b60015474010000000000000000000000000000000000000000900460ff1615610701576040805162461bcd60e51b815260206004820152601860248201527f436f6d706f756e6453747261746567793a206578697465640000000000000000604482015290519081900360640190fd5b6001600160a01b038216321461075e576040805162461bcd60e51b815260206004820152601a60248201527f436f6d706f756e6453747261746567793a20454f41206f6e6c79000000000000604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633af9e669306040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050602060405180830381600087803b1580156107cf57600080fd5b505af11580156107e3573d6000803e3d6000fd5b505050506040513d60208110156107f957600080fd5b505190506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663852a12e36108368387611c8a565b6040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561086c57600080fd5b505af1158015610880573d6000803e3d6000fd5b505050506040513d602081101561089657600080fd5b5051156108ea576040805162461bcd60e51b815260206004820152601d60248201527f436f6d706f756e6453747261746567793a2070726f666974206661696c000000604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561095957600080fd5b505afa15801561096d573d6000803e3d6000fd5b505050506040513d602081101561098357600080fd5b505190506109db6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083611ce2565b9150505b92915050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a64576040805162461bcd60e51b815260206004820152601c60248201527f436f6d706f756e6453747261746567793a206f6e6c792062656e746f00000000604482015290519081900360640190fd5b60015474010000000000000000000000000000000000000000900460ff1615610ad4576040805162461bcd60e51b815260206004820152601860248201527f436f6d706f756e6453747261746567793a206578697465640000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663852a12e3836040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015610b3a57600080fd5b505af1158015610b4e573d6000803e3d6000fd5b505050506040513d6020811015610b6457600080fd5b505115610bb8576040805162461bcd60e51b815260206004820152601d60248201527f436f6d706f756e6453747261746567793a2072656465656d206661696c000000604482015290519081900360640190fd5b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916370a08231916024808301926020929190829003018186803b158015610c3757600080fd5b505afa158015610c4b573d6000803e3d6000fd5b505050506040513d6020811015610c6157600080fd5b50519050610cb96001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083611ce2565b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001546001600160a01b0316338114610d42576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b60015474010000000000000000000000000000000000000000900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e7e576040805162461bcd60e51b815260206004820152601c60248201527f436f6d706f756e6453747261746567793a206f6e6c792062656e746f00000000604482015290519081900360640190fd5b60015474010000000000000000000000000000000000000000900460ff1615610eee576040805162461bcd60e51b815260206004820152601860248201527f436f6d706f756e6453747261746567793a206578697465640000000000000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0712d68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015610f5457600080fd5b505af1158015610f68573d6000803e3d6000fd5b505050506040513d6020811015610f7e57600080fd5b50511561048f576040805162461bcd60e51b815260206004820152601c60248201527f436f6d706f756e6453747261746567793a206d696e74206572726f7200000000604482015290519081900360640190fd5b7f000000000000000000000000000000000000000000000000000000000000000081565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611075576040805162461bcd60e51b815260206004820152601c60248201527f436f6d706f756e6453747261746567793a206f6e6c792062656e746f00000000604482015290519081900360640190fd5b60015474010000000000000000000000000000000000000000900460ff16156110e5576040805162461bcd60e51b815260206004820152601860248201527f436f6d706f756e6453747261746567793a206578697465640000000000000000604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633af9e669306040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050602060405180830381600087803b15801561115657600080fd5b505af115801561116a573d6000803e3d6000fd5b505050506040513d602081101561118057600080fd5b5051604080517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015291519293506000927f0000000000000000000000000000000000000000000000000000000000000000909216916370a0823191602480820192602092909190829003018186803b15801561122c57600080fd5b505afa158015611240573d6000803e3d6000fd5b505050506040513d602081101561125657600080fd5b505190508082116113a057604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163db006a759183916370a08231916024808301926020929190829003018186803b1580156112e857600080fd5b505afa1580156112fc573d6000803e3d6000fd5b505050506040513d602081101561131257600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092525160248083019260209291908290030181600087803b15801561136b57600080fd5b505af192505050801561139057506040513d602081101561138b57600080fd5b505160015b6113995761139b565b505b611436565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663852a12e3826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561140657600080fd5b505af192505050801561142b57506040513d602081101561142657600080fd5b505160015b61143457611436565b505b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156114a557600080fd5b505afa1580156114b9573d6000803e3d6000fd5b505050506040513d60208110156114cf57600080fd5b50518581039450905061152c6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083611ce2565b5050600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000017905550919050565b6000546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080546001600160a01b0316331461162a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60015474010000000000000000000000000000000000000000900460ff16611699576040805162461bcd60e51b815260206004820152601c60248201527f436f6d706f756e6453747261746567793a204e6f742065786974656400000000604482015290519081900360640190fd5b836001600160a01b031683836040518082805190602001908083835b602083106116f257805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016116b5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611754576040519150601f19603f3d011682016040523d82523d6000602084013e611759565b606091505b509095945050505050565b6001546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a4390586866040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b15801561181857600080fd5b505afa15801561182c573d6000803e3d6000fd5b505050506040513d602081101561184257600080fd5b505190506001600160a01b0381166118a1576040805162461bcd60e51b815260206004820181905260248201527f436f6d706f756e6453747261746567793a2043616e6e6f7420636f6e76657274604482015290519081900360640190fd5b6000856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156118f057600080fd5b505afa158015611904573d6000803e3d6000fd5b505050506040513d602081101561191a57600080fd5b5051604080517f0902f1ac000000000000000000000000000000000000000000000000000000008152905191925060009182916001600160a01b03861691630902f1ac91600480820192606092909190829003018186803b15801561197e57600080fd5b505afa158015611992573d6000803e3d6000fd5b505050506040513d60608110156119a857600080fd5b5080516020909101516dffffffffffffffffffffffffffff918216935016905060006119d6846103e5611e98565b90506119ec6001600160a01b038a168686611ce2565b876001600160a01b0316896001600160a01b03161015611b4e57611a1c81611a16856103e8611e98565b90611f04565b611a3283611a2c876103e5611e98565b90611e98565b81611a3957fe5b0495506001600160a01b03851663022c0d9f6000888a826040519080825280601f01601f191660200182016040528015611a7a576020820181803683370190505b506040518563ffffffff1660e01b815260040180858152602001848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ae2578181015183820152602001611aca565b50505050905090810190601f168015611b0f5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015611b3157600080fd5b505af1158015611b45573d6000803e3d6000fd5b50505050611c7e565b611b5e81611a16846103e8611e98565b611b6e84611a2c876103e5611e98565b81611b7557fe5b60408051600080825260208201928390527f022c0d9f0000000000000000000000000000000000000000000000000000000083529390920460248301818152604484018590526001600160a01b038c81166064860152608060848601908152855160a48701819052939c50908b169563022c0d9f958d9591948f949193919260c48501918083838a5b83811015611c16578181015183820152602001611bfe565b50505050905090810190601f168015611c435780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015611c6557600080fd5b505af1158015611c79573d6000803e3d6000fd5b505050505b50505050509392505050565b808203828111156109df576040805162461bcd60e51b815260206004820152601560248201527f426f72696e674d6174683a20556e646572666c6f770000000000000000000000604482015290519081900360640190fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000178152925182516000946060949389169392918291908083835b60208310611dab57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611d6e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611e0d576040519150601f19603f3d011682016040523d82523d6000602084013e611e12565b606091505b5091509150818015611e40575080511580611e405750808060200190516020811015611e3d57600080fd5b50515b611e91576040805162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604482015290519081900360640190fd5b5050505050565b6000811580611eb357505080820282828281611eb057fe5b04145b6109df576040805162461bcd60e51b815260206004820152601860248201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604482015290519081900360640190fd5b818101818110156109df576040805162461bcd60e51b815260206004820152601860248201527f426f72696e674d6174683a20416464204f766572666c6f770000000000000000604482015290519081900360640190fdfea26469706673582212203d1532a10e4baa36de06905c2dd8ef26085678127b00bf0765fd784d4eecf5e064736f6c634300060c0033";

type CompoundStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompoundStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompoundStrategy__factory extends ContractFactory {
  constructor(...args: CompoundStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CompoundStrategy";
  }

  override deploy(
    bentobox_: string,
    factory_: string,
    token_: string,
    cToken_: string,
    compToken_: string,
    weth_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundStrategy> {
    return super.deploy(
      bentobox_,
      factory_,
      token_,
      cToken_,
      compToken_,
      weth_,
      overrides || {}
    ) as Promise<CompoundStrategy>;
  }
  override getDeployTransaction(
    bentobox_: string,
    factory_: string,
    token_: string,
    cToken_: string,
    compToken_: string,
    weth_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bentobox_,
      factory_,
      token_,
      cToken_,
      compToken_,
      weth_,
      overrides || {}
    );
  }
  override attach(address: string): CompoundStrategy {
    return super.attach(address) as CompoundStrategy;
  }
  override connect(signer: Signer): CompoundStrategy__factory {
    return super.connect(signer) as CompoundStrategy__factory;
  }
  static readonly contractName: "CompoundStrategy";

  public readonly contractName: "CompoundStrategy";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundStrategyInterface {
    return new utils.Interface(_abi) as CompoundStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundStrategy {
    return new Contract(address, _abi, signerOrProvider) as CompoundStrategy;
  }
}
