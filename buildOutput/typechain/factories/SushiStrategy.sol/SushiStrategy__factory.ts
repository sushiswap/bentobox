/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SushiStrategy,
  SushiStrategyInterface,
} from "../../SushiStrategy.sol/SushiStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISushiBar",
        name: "bar_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "sushi_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "exit",
    outputs: [
      {
        internalType: "int256",
        name: "amountAdded",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "harvest",
    outputs: [
      {
        internalType: "int256",
        name: "amountAdded",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "actualAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516113ae3803806113ae8339818101604052604081101561003357600080fd5b508051602090910151600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160601b0319606092831b811660a052911b1660805260805160601c60a05160601c61129261011c60003980610372528061044252806104e552806105b35280610786528061083a52806108fc52806109a35280610c1b5280610ce75280610dad5280610e81525080610515528061066652806106ee528061086a5280610a565280610ade5280610bec5280610ee55280610f9552506112926000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636939aaf51161005b5780636939aaf5146101285780637f8661a1146101455780638da5cb5b14610162578063e30c39781461018657610088565b8063078dfbe71461008d57806318fccc76146100c55780632e1a7d4d146101035780634e71e0c814610120575b600080fd5b6100c3600480360360608110156100a357600080fd5b506001600160a01b0381351690602081013515159060400135151561018e565b005b6100f1600480360360408110156100db57600080fd5b50803590602001356001600160a01b031661030e565b60408051918252519081900360200190f35b6100f16004803603602081101561011957600080fd5b5035610722565b6100c3610b10565b6100c36004803603602081101561013e57600080fd5b5035610bea565b6100f16004803603602081101561015b57600080fd5b5035610d49565b61016a610fc5565b604080516001600160a01b039092168252519081900360200190f35b61016a610fd4565b6000546001600160a01b031633146101ed576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b81156102d5576001600160a01b0383161515806102075750805b610258576040805162461bcd60e51b815260206004820152601560248201527f4f776e61626c653a207a65726f20616464726573730000000000000000000000604482015290519081900360640190fd5b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600180549091169055610309565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0385161790555b505050565b600080546001600160a01b0316331461036e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156103dd57600080fd5b505afa1580156103f1573d6000803e3d6000fd5b505050506040513d602081101561040757600080fd5b5051604080517f18160ddd00000000000000000000000000000000000000000000000000000000815290519192506000916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916318160ddd916004808301926020929190829003018186803b15801561048857600080fd5b505afa15801561049c573d6000803e3d6000fd5b505050506040513d60208110156104b257600080fd5b5051604080517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015291519293506000927f0000000000000000000000000000000000000000000000000000000000000000909216916370a0823191602480820192602092909190829003018186803b15801561055e57600080fd5b505afa158015610572573d6000803e3d6000fd5b505050506040513d602081101561058857600080fd5b505190506000816105998885610fe3565b816105a057fe5b04905060006105af8583611055565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166367dfd4c9826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561061757600080fd5b505af115801561062b573d6000803e3d6000fd5b5050604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693506370a0823192506024808301926020929190829003018186803b1580156106ae57600080fd5b505afa1580156106c2573d6000803e3d6000fd5b505050506040513d60208110156106d857600080fd5b5051600054909650610717906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116886110ad565b505050505092915050565b600080546001600160a01b03163314610782576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107dd57600080fd5b505afa1580156107f1573d6000803e3d6000fd5b505050506040513d602081101561080757600080fd5b5051604080517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015291519293506000927f0000000000000000000000000000000000000000000000000000000000000000909216916370a0823191602480820192602092909190829003018186803b1580156108b357600080fd5b505afa1580156108c7573d6000803e3d6000fd5b505050506040513d60208110156108dd57600080fd5b505190506000816108ee8685610fe3565b816108f557fe5b04905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561096757600080fd5b505afa15801561097b573d6000803e3d6000fd5b505050506040513d602081101561099157600080fd5b50519050808211156109a1578091505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166367dfd4c9836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610a0757600080fd5b505af1158015610a1b573d6000803e3d6000fd5b5050604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693506370a0823192506024808301926020929190829003018186803b158015610a9e57600080fd5b505afa158015610ab2573d6000803e3d6000fd5b505050506040513d6020811015610ac857600080fd5b5051600054909550610b07906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116876110ad565b50505050919050565b6001546001600160a01b0316338114610b70576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610c8157600080fd5b505af1158015610c95573d6000803e3d6000fd5b505050506040513d6020811015610cab57600080fd5b5050604080517fa59f3e0c0000000000000000000000000000000000000000000000000000000081526004810183905290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163a59f3e0c91602480830192600092919082900301818387803b158015610d2e57600080fd5b505af1158015610d42573d6000803e3d6000fd5b5050505050565b600080546001600160a01b03163314610da9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610e1857600080fd5b505afa158015610e2c573d6000803e3d6000fd5b505050506040513d6020811015610e4257600080fd5b5051604080517f67dfd4c90000000000000000000000000000000000000000000000000000000081526004810183905290519192506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916367dfd4c99160248082019260009290919082900301818387803b158015610ec957600080fd5b505af1158015610edd573d6000803e3d6000fd5b5050505060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610f5057600080fd5b505afa158015610f64573d6000803e3d6000fd5b505050506040513d6020811015610f7a57600080fd5b50516000548582039450909150610fbe906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169116836110ad565b5050919050565b6000546001600160a01b031681565b6001546001600160a01b031681565b6000811580610ffe57505080820282828281610ffb57fe5b04145b61104f576040805162461bcd60e51b815260206004820152601860248201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604482015290519081900360640190fd5b92915050565b8082038281111561104f576040805162461bcd60e51b815260206004820152601560248201527f426f72696e674d6174683a20556e646572666c6f770000000000000000000000604482015290519081900360640190fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000178152925182516000946060949389169392918291908083835b6020831061117657805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611139565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146111d8576040519150601f19603f3d011682016040523d82523d6000602084013e6111dd565b606091505b509150915081801561120b57508051158061120b575080806020019051602081101561120857600080fd5b50515b610d42576040805162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604482015290519081900360640190fdfea26469706673582212206ede0952299fcfc91a09bcc3c506bef0f99057f9af548c327376ffbf0e15c3b464736f6c634300060c0033";

type SushiStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SushiStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SushiStrategy__factory extends ContractFactory {
  constructor(...args: SushiStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SushiStrategy";
  }

  override deploy(
    bar_: string,
    sushi_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SushiStrategy> {
    return super.deploy(
      bar_,
      sushi_,
      overrides || {}
    ) as Promise<SushiStrategy>;
  }
  override getDeployTransaction(
    bar_: string,
    sushi_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(bar_, sushi_, overrides || {});
  }
  override attach(address: string): SushiStrategy {
    return super.attach(address) as SushiStrategy;
  }
  override connect(signer: Signer): SushiStrategy__factory {
    return super.connect(signer) as SushiStrategy__factory;
  }
  static readonly contractName: "SushiStrategy";

  public readonly contractName: "SushiStrategy";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SushiStrategyInterface {
    return new utils.Interface(_abi) as SushiStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SushiStrategy {
    return new Contract(address, _abi, signerOrProvider) as SushiStrategy;
  }
}
