/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Salary, SalaryInterface } from "../../salary.sol/Salary";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract BentoBox",
        name: "_bentoBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "salaryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "LogCancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "cliffTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "endTimestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "cliffPercent",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "totalShares",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "salaryId",
        type: "uint256",
      },
    ],
    name: "LogCreate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "salaryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "LogWithdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "salaryId",
        type: "uint256",
      },
    ],
    name: "available",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "calls",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFail",
        type: "bool",
      },
    ],
    name: "batch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "bentoBox",
    outputs: [
      {
        internalType: "contract BentoBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "salaryId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bool",
        name: "toBentoBox",
        type: "bool",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "cliffTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "endTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "cliffPercent",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "uint256",
        name: "salaryId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "funder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "salaries",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawnShares",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "cliffTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "endTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "cliffPercent",
        type: "uint64",
      },
      {
        internalType: "uint128",
        name: "shares",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "setBentoBoxApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "salaryId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bool",
        name: "toBentoBox",
        type: "bool",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162001bbc38038062001bbc8339810160408190526100319161009f565b600080546001600160a01b0319166001600160a01b03831690811782556040805163577268d960e11b81529051919263aee4d1b29260048084019382900301818387803b15801561008157600080fd5b505af1158015610095573d6000803e3d6000fd5b50505050506100cd565b6000602082840312156100b0578081fd5b81516001600160a01b03811681146100c6578182fd5b9392505050565b611adf80620000dd6000396000f3fe6080604052600436106100b05760003560e01c80637c516e941161006957806396e494e81161004e57806396e494e8146101b5578063ad0dee43146101e2578063d2423b5114610210576100b0565b80637c516e94146101755780638fbe4a3a14610195576100b0565b8063489bb0b21161009a578063489bb0b21461010d578063610addba1461012d5780636b2ace8714610160576100b0565b8062ebf5dd146100b55780631f2c9238146100d7575b600080fd5b3480156100c157600080fd5b506100d56100d0366004611559565b610223565b005b3480156100e357600080fd5b506100f76100f2366004611529565b6104cf565b60405161010491906115c6565b60405180910390f35b34801561011957600080fd5b506100d5610128366004611271565b6104f6565b34801561013957600080fd5b5061014d610148366004611529565b610582565b6040516101049796959493929190611654565b34801561016c57600080fd5b506100f7610617565b34801561018157600080fd5b506100d56101903660046113ef565b610626565b3480156101a157600080fd5b506100d56101b0366004611559565b6106b3565b3480156101c157600080fd5b506101d56101d0366004611529565b610927565b6040516101049190611994565b3480156101ee57600080fd5b506102026101fd3660046112ca565b6109ee565b60405161010492919061199d565b6100d561021e36600461136f565b610eda565b61022b611210565b6001848154811061023857fe5b60009182526020918290206040805160e081018252600490930290910180546001600160a01b039081168085526001830154909116948401949094526002810154918301919091526003015463ffffffff8082166060840152640100000000820416608083015267ffffffffffffffff6801000000000000000082041660a08301526fffffffffffffffffffffffffffffffff7001000000000000000000000000000000009091041660c08201529150331461030f5760405162461bcd60e51b815260040161030690611926565b60405180910390fd5b600061031a82610f9d565b604083015190915061032c90826110fd565b6001868154811061033957fe5b90600052602060002090600402016002018190555082156103dd5760005460208301516040517ff18d03cc0000000000000000000000000000000000000000000000000000000081526001600160a01b039092169163f18d03cc916103a6913090899087906004016116f8565b600060405180830381600087803b1580156103c057600080fd5b505af11580156103d4573d6000803e3d6000fd5b50505050610486565b6000805460208401516040517f97da6d300000000000000000000000000000000000000000000000000000000081526001600160a01b03909216926397da6d3092610432929130918a91908890600401611722565b6040805180830381600087803b15801561044b57600080fd5b505af115801561045f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104839190611593565b50505b836001600160a01b0316857f125e889e0ad284210ec4c8448f648c2a782a6d7f2f9d607aefd518485a78c7f4836040516104c09190611994565b60405180910390a35050505050565b600281815481106104dc57fe5b6000918252602090912001546001600160a01b0316905081565b6000546040517fc0a47c930000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063c0a47c9390610549908890309089908990899089906004016115da565b600060405180830381600087803b15801561056357600080fd5b505af1158015610577573d6000803e3d6000fd5b505050505050505050565b6001818154811061058f57fe5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b0392831694509116919063ffffffff8082169164010000000081049091169068010000000000000000810467ffffffffffffffff169070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1687565b6000546001600160a01b031681565b6040517fd505accf0000000000000000000000000000000000000000000000000000000081526001600160a01b0389169063d505accf90610677908a908a908a908a908a908a908a90600401611613565b600060405180830381600087803b15801561069157600080fd5b505af11580156106a5573d6000803e3d6000fd5b505050505050505050505050565b82336001600160a01b0316600282815481106106cb57fe5b6000918252602090912001546001600160a01b0316146106fd5760405162461bcd60e51b8152600401610306906118b8565b600061076e6001868154811061070f57fe5b9060005260206000209060040201600201546001878154811061072e57fe5b600091825260209091206004909102016003015470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1690611120565b9050821561081857600054600180546001600160a01b039092169163f18d03cc91908890811061079a57fe5b906000526020600020906004020160010160009054906101000a90046001600160a01b03163087856040518563ffffffff1660e01b81526004016107e194939291906116f8565b600060405180830381600087803b1580156107fb57600080fd5b505af115801561080f573d6000803e3d6000fd5b505050506108ed565b600054600180546001600160a01b03909216916397da6d3091908890811061083c57fe5b6000918252602082206004918202016001015460405160e085901b7fffffffff00000000000000000000000000000000000000000000000000000000168152610899936001600160a01b039092169230928b929091899101611722565b6040805180830381600087803b1580156108b257600080fd5b505af11580156108c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ea9190611593565b50505b836001600160a01b0316857fcabe9e1784950547285194bcd0e3c0fc267db2c6c6b7e6a913ab88754f9fb3a5836040516104c09190611994565b60006109e86001838154811061093957fe5b60009182526020918290206040805160e081018252600490930290910180546001600160a01b0390811684526001820154169383019390935260028301549082015260039091015463ffffffff8082166060840152640100000000820416608083015267ffffffffffffffff6801000000000000000082041660a08301526fffffffffffffffffffffffffffffffff7001000000000000000000000000000000009091041660c0820152610f9d565b92915050565b6000808563ffffffff168763ffffffff161115610a1d5760405162461bcd60e51b815260040161030690611881565b670de0b6b3a76400008563ffffffff161115610a4b5760405162461bcd60e51b8152600401610306906118ef565b60ff8416610b7757600080546040517fda5139ca0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169163da5139ca91610aa0918c91889190600401611756565b60206040518083038186803b158015610ab857600080fd5b505afa158015610acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af09190611541565b6000546040517ff18d03cc0000000000000000000000000000000000000000000000000000000081529192506001600160a01b03169063f18d03cc90610b40908b903390309087906004016116f8565b600060405180830381600087803b158015610b5a57600080fd5b505af1158015610b6e573d6000803e3d6000fd5b50505050610c20565b6000546001600160a01b03166302b9446c8960ff8716600114610b9a5733610ba7565b6000546001600160a01b03165b308760006040518663ffffffff1660e01b8152600401610bcb9594939291906116b3565b6040805180830381600087803b158015610be457600080fd5b505af1158015610bf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1c9190611593565b9150505b6001549150610c2d611210565b6001600160a01b03808b1682528916602082015263ffffffff80891660608301528781166080830152861660a0820152610c6682611143565b6fffffffffffffffffffffffffffffffff90811660c083019081526001805480820182556000828152855160049092027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810180546001600160a01b039485167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560208801517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78301805491861691831691909117905560408801517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf883015560608801517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9909201805460808a015160a08b015198518a167001000000000000000000000000000000000267ffffffffffffffff90991668010000000000000000027fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff63ffffffff928316640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff939097167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000009094169390931791909116949094171692909217909616949094179093556002805492830181559092527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018054909216339081179092558a811691908c16907f8009e1b43ca81a771d0da92e87b6ed944f38c88e0a132536e6019c48dcf1de698b8b8b610eb389611143565b8a604051610ec59594939291906119ab565b60405180910390a45097509795505050505050565b60005b82811015610f97576000606030868685818110610ef657fe5b9050602002810190610f0891906119ed565b604051610f169291906115b6565b600060405180830381855af49150503d8060008114610f51576040519150601f19603f3d011682016040523d82523d6000602084013e610f56565b606091505b509150915081158015610f665750835b15610f8d57610f7481611179565b60405162461bcd60e51b8152600401610306919061178b565b5050600101610edd565b50505050565b6000816060015163ffffffff16421015610fb9575060006110d1565b816080015163ffffffff164210610fe7575060c08101516fffffffffffffffffffffffffffffffff166110d1565b6000611006836060015163ffffffff164261112090919063ffffffff16565b90506000611031846060015163ffffffff16856080015163ffffffff1661112090919063ffffffff16565b60a085015190915067ffffffffffffffff1682156110985760006110748660a0015167ffffffffffffffff16670de0b6b3a764000061112090919063ffffffff16565b90506110948361108483876111d9565b8161108b57fe5b849190046110fd565b9150505b60c0850151670de0b6b3a7640000906110c3906fffffffffffffffffffffffffffffffff16836111d9565b816110ca57fe5b0493505050505b81604001518111156110f45760408201516110ed908290611120565b90506110f8565b5060005b919050565b818101818110156109e85760405162461bcd60e51b81526004016103069061184a565b808203828111156109e85760405162461bcd60e51b8152600401610306906117dc565b60006fffffffffffffffffffffffffffffffff8211156111755760405162461bcd60e51b815260040161030690611813565b5090565b60606044825110156111bf575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c7900000060208201526110f8565b600482019150818060200190518101906109e89190611470565b60008115806111f4575050808202828282816111f157fe5b04145b6109e85760405162461bcd60e51b81526004016103069061195d565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b803563ffffffff811681146109e857600080fd5b803560ff811681146109e857600080fd5b600080600080600060a08688031215611288578081fd5b853561129381611a83565b945060208601356112a381611a9b565b93506112b28760408801611260565b94979396509394606081013594506080013592915050565b600080600080600080600060e0888a0312156112e4578182fd5b87356112ef81611a83565b965060208801356112ff81611a83565b955061130e8960408a0161124c565b945061131d8960608a0161124c565b935061132c8960808a0161124c565b925061133b8960a08a01611260565b915060c08801356fffffffffffffffffffffffffffffffff8116811461135f578182fd5b8091505092959891949750929550565b600080600060408486031215611383578283fd5b833567ffffffffffffffff8082111561139a578485fd5b818601915086601f8301126113ad578485fd5b8135818111156113bb578586fd5b87602080830285010111156113ce578586fd5b602092830195509350508401356113e481611a9b565b809150509250925092565b600080600080600080600080610100898b03121561140b578081fd5b883561141681611a83565b9750602089013561142681611a83565b9650604089013561143681611a83565b955060608901359450608089013593506114538a60a08b01611260565b925060c0890135915060e089013590509295985092959890939650565b600060208284031215611481578081fd5b815167ffffffffffffffff80821115611498578283fd5b818401915084601f8301126114ab578283fd5b8151818111156114b9578384fd5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011682010181811084821117156114f7578586fd5b60405281815283820160200187101561150e578485fd5b61151f826020830160208701611a57565b9695505050505050565b60006020828403121561153a578081fd5b5035919050565b600060208284031215611552578081fd5b5051919050565b60008060006060848603121561156d578283fd5b83359250602084013561157f81611a83565b9150604084013580151581146113e4578182fd5b600080604083850312156115a5578182fd5b505080516020909101519092909150565b6000828483379101908152919050565b6001600160a01b0391909116815260200190565b6001600160a01b039687168152949095166020850152911515604084015260ff166060830152608082015260a081019190915260c00190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b039788168152959096166020860152604085019390935263ffffffff918216606085015216608083015267ffffffffffffffff1660a08201526fffffffffffffffffffffffffffffffff90911660c082015260e00190565b6001600160a01b03958616815293851660208501529190931660408301526fffffffffffffffffffffffffffffffff9092166060820152608081019190915260a00190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b03958616815293851660208501529190931660408301526060820192909252608081019190915260a00190565b6001600160a01b039390931683526fffffffffffffffffffffffffffffffff9190911660208301521515604082015260600190565b60006020825282518060208401526117aa816040850160208701611a57565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60208082526015908201527f426f72696e674d6174683a20556e646572666c6f770000000000000000000000604082015260600190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604082015260600190565b60208082526018908201527f426f72696e674d6174683a20416464204f766572666c6f770000000000000000604082015260600190565b60208082526013908201527f53616c6172793a20636c696666203e20656e6400000000000000000000000000604082015260600190565b60208082526012908201527f53616c6172793a206e6f742066756e6465720000000000000000000000000000604082015260600190565b60208082526017908201527f53616c6172793a20636c69666620746f6f206c61726765000000000000000000604082015260600190565b60208082526015908201527f53616c6172793a206e6f7420726563697069656e740000000000000000000000604082015260600190565b60208082526018908201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604082015260600190565b90815260200190565b918252602082015260400190565b63ffffffff958616815293851660208501529190931660408301526fffffffffffffffffffffffffffffffff9092166060820152608081019190915260a00190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611a21578283fd5b83018035915067ffffffffffffffff821115611a3b578283fd5b602001915036819003821315611a5057600080fd5b9250929050565b60005b83811015611a72578181015183820152602001611a5a565b83811115610f975750506000910152565b6001600160a01b0381168114611a9857600080fd5b50565b8015158114611a9857600080fdfea2646970667358221220669d5544f8704b120308ee5e86d64163b16cf9b42580bf12fa635dc4015798d864736f6c634300060c0033";

type SalaryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SalaryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Salary__factory extends ContractFactory {
  constructor(...args: SalaryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Salary";
  }

  override deploy(
    _bentoBox: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Salary> {
    return super.deploy(_bentoBox, overrides || {}) as Promise<Salary>;
  }
  override getDeployTransaction(
    _bentoBox: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_bentoBox, overrides || {});
  }
  override attach(address: string): Salary {
    return super.attach(address) as Salary;
  }
  override connect(signer: Signer): Salary__factory {
    return super.connect(signer) as Salary__factory;
  }
  static readonly contractName: "Salary";

  public readonly contractName: "Salary";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SalaryInterface {
    return new utils.Interface(_abi) as SalaryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Salary {
    return new Contract(address, _abi, signerOrProvider) as Salary;
  }
}
